---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

type Props = CollectionEntry<"projects">["data"];

const {
  title,
  description,
  pubDate,
  heroImage,
  projectType,
  techStack,
  liveUrl,
  sourceUrl,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: 100%;
        margin: 0 auto;
        padding: 2rem 1rem;
        max-width: 1000px;
      }

      .hero-container {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        align-items: flex-start;
      }

      .hero-image {
        flex: 1 1 350px;
        max-width: 420px;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      }

      .hero-image img {
        width: 100%;
        height: auto;
        object-fit: cover;
        display: block;
        transition: transform 0.3s ease;
      }

      .hero-image img:hover {
        transform: scale(1.03);
      }

      .project-details {
        flex: 1 1 300px;
        min-width: 280px;
      }

      .title h1 {
        margin: 0 0 0.5rem;
        font-size: 2rem;
      }

      .description {
        font-size: 1.1rem;
        margin-bottom: 1rem;
        color: #333;
      }

      .meta {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 1.5rem;
      }

      .meta > div {
        margin-bottom: 0.6rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-wrap: wrap;
      }

      .tech-stack {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
      }

      .tech-badge {
        background-color: #3b82f6;
        color: white;
        padding: 0.25em 0.7em;
        border-radius: 9999px;
        font-size: 0.85rem;
        font-weight: 600;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        user-select: none;
        cursor: default;
        transition: background 0.2s ease;
      }

      .tech-badge:hover {
        background-color: #2563eb;
      }

      .project-type {
        background-color: #eef2ff;
        color: #4338ca;
        padding: 0.3em 0.8em;
        border-radius: 9999px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.4em;
      }

      .external-links {
        display: flex;
        gap: 1rem;
        margin-top: 1.5rem;
      }

      .external-links a {
        text-decoration: none;
        border: 1.5px solid #3b82f6;
        color: #3b82f6;
        padding: 0.5em 1em;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: all 0.2s ease;
      }

      .external-links a:hover {
        background-color: #3b82f6;
        color: white;
      }

      @media (max-width: 768px) {
        .hero-container {
          flex-direction: column;
        }

        .hero-image,
        .project-details {
          max-width: 100%;
        }

        .title h1 {
          font-size: 1.6rem;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-container">
          <div class="hero-image">
            {
              heroImage && (
                <img src={heroImage} alt={`Thumbnail for ${title}`} />
              )
            }
          </div>
          <div class="project-details">
            <h1>{title}</h1>
            <p>{description}</p>

            <div class="meta">
              {
                pubDate && (
                  <div>
                    üìÖ{" "}
                    {pubDate instanceof Date
                      ? pubDate.toLocaleDateString()
                      : new Date(pubDate).toLocaleDateString()}
                  </div>
                )
              }

              <div class="tech-stack">
                {
                  techStack &&
                    techStack.map((tech) => (
                      <span class="tech-badge">{tech}</span>
                    ))
                }
              </div>

              <div class="project-type">
                {projectType === "Personal" ? "üë§ Personal" : "üë• Team"}
              </div>

              <div class="external-links" style="margin-top: 1rem;">
                {
                  liveUrl && (
                    <a href={liveUrl} target="_blank" rel="noopener noreferrer">
                      üåê Live Site
                    </a>
                  )
                }
                {
                  sourceUrl && (
                    <a
                      href={sourceUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      üíª Source Code
                    </a>
                  )
                }
              </div>
            </div>
          </div>
        </div>

        <slot />
      </article>
    </main>
    <Footer />
  </body>
</html>
